plugins {
    id 'java'
    id 'war'
    id 'jacoco'
}

group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.apache.spark', name: 'spark-core_2.10', version: '2.2.0'
    compile group: 'org.apache.spark', name: 'spark-streaming_2.10', version: '2.2.0'
    compile group: 'org.apache.spark', name: 'spark-sql_2.10', version: '2.2.0'
    compile 'com.sparkjava:spark-core:2.2'
    compile group: 'com.google.inject', name: 'guice', version: '4.2.2'
    compile group: 'aopalliance', name: 'aopalliance', version: '1.0'
    compile group: 'org.checkerframework', name: 'checker-compat-qual', version: '2.5.5'
    compile group: 'com.google.errorprone', name: 'error_prone_annotations', version: '2.0.19'
    compile group: 'com.google.guava', name: 'guava', version: '25.1-android'
    compile group: 'com.google.j2objc', name: 'j2objc-annotations', version: '1.1'
    compile group: 'javax.inject', name: 'javax.inject', version: '1'
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    providedCompile group: 'org.codehaus.mojo', name: 'animal-sniffer-annotations', version: '1.14'
    testCompile group:'org.mockito',name:'mockito-core',version:'2.28.2'
    testCompile group:'org.mockito',name:'mockito-inline',version:'2.28.2'
    testCompile 'junit:junit:4.12'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.1'
    //slf4j-simple-1.7.7.jar

    testImplementation('org.apache.logging.log4j:log4j-core:2.13.1')
             {
        //exclude 'org.slf4j:slf4j-simple:1.7.7'
                 exclude group: 'org.slf4j'
    }

    configurations.all {
       exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("customJacocoReportDir")
}

jacocoTestReport{
    reports{
        xml.enabled false
        csv.enabled false
        html.destination file("jacocoHTML")
    }
   afterEvaluate {
      classDirectories.setFrom(files(classDirectories.files.collect {
         fileTree(dir: it,
               exclude: [
                       '**/com/onboardingapp/config/**',
                       '**/com/onboardingproject/spark**'
                      
               ])
      }))} 
}

/*jacocoTestCoverageVerification {
    finalizedBy jacocoTestReport

}*/




